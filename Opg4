### OPGAVE 4 - SHINY ###
### OPGAVE 4.1 #### 
# Lav en dynamisk webapp hvor man ser et bar-plot af spillerens samlede målscore og xG-sum
# og hvor man kan regulere antallet af spillere. 
# I skal vedlægge koden. Det gælder for alle tre opgaver.

## FORARBEJDE TIL SHINY APP ##

# benytter dataframen allshots - men sørger for det kun sæson 21/22 der er med. 
allshots2122 <- allShots[allShots$seasonId %in% c("187502", "186215"),]

# frame der kun indeholder mål 
goals2122 <- allshots2122[allshots2122$shot.isGoal %in% "TRUE",]

# frame der indeholder antal mål pr. spiller 
player_goals <- goals2122 %>% count(goals2122$player.name, sort = TRUE) 
colnames(player_goals) <- c("player.name", "Antal_mål")

# finder summen af xG
player_xG <- goals2122 %>% group_by(player.name) %>% summarise(sum_shot_xg = sum(shot.xg, na.rm = TRUE))

# sammensætter de to dataframes - så vi samlet har alle mål og summeret xG fra sæson 21/22
all_goals_and_xG <- left_join(player_goals, player_xG, by = "player.name")

tester <- all_goals_and_xG[1:10,]

# Forsøger mig med et plot 

ggplot(tester, aes(x = reorder(player.name, -Antal_mål))) +
  geom_bar(aes(y = Antal_mål), stat = "identity", fill = "purple4", group = 1) +
  geom_point(aes(y = sum_shot_xg, color = "Sum af xG"), group = 1) +
  scale_color_manual(name = "", values = c("Sum af xG" = "white")) +
  theme(axis.text.x = element_text(angle = 75, vjust = 1, hjust = 1))+
  scale_y_continuous(name = "Antal mål", breaks = seq(0, 20, 5), limits = c(0, 20))+
  labs(x = "Spillernavn")
  

### SHINY APP ###

# UI for appen
ui <- fluidPage(
  titlePanel("Sammenligning af målscore og xG-sum for spillere"),
    fluidRow(
      column(width = 2, offset = 0.5, #offset flytter mod højre
      selectInput("Antal_mål", "Flere mål end...:", 
                  choices = c("Alle", unique(all_goals_and_xG$Antal_mål)),
                  selected = "15"))
    ),
    fluidRow(
      column(width = 11, #benyttes til at tilrette appen
      plotOutput("player_plot")
    )
  )
)

server <- function(input, output) {
  
# Funktion til at opdatere plottet baseret på antallet af mål valgt
  output$player_plot <- renderPlot({
    if (input$Antal_mål == "Alle") {
      filtered_data <- all_goals_and_xG
    } else {
      filtered_data <- subset(all_goals_and_xG, Antal_mål >= as.numeric(input$Antal_mål))
    }
    
    ggplot(filtered_data, aes(x = reorder(player.name, -Antal_mål))) +
      geom_bar(aes(y = Antal_mål), stat = "identity", fill = "purple4", group = 1) +
      geom_point(aes(y = sum_shot_xg, color = "Sum af xG"), group = 1) +
      scale_color_manual(name = "", values = c("Sum af xG" = "white")) +
      theme(axis.text.x = element_text(angle = 75, vjust = 1, hjust = 1)) +
      scale_y_continuous(name = "Antal mål", breaks = seq(0, 20, 5), limits = c(0, 20)) +
      labs(x = "Spillernavn")
  })
}

# Kør Shiny-app
shinyApp(ui = ui, server = server)




#### OPGAVE 4.2 #### 
liga_valg <- unique(allpasses2122$competitionId)
liga_navne <- c("Polen" = 692, "Holland" = 635) # Erstat "ErstatMedDenRigtigeID" med det korrekte ID

ui <- fluidPage(
  titlePanel("Afleveringsanalyse"),
  sidebarLayout(
    sidebarPanel(
      selectInput("liga", "Vælg en liga:",
                  choices = liga_navne),
      uiOutput("kampDropdown")
    ),
    mainPanel(
      plotOutput("passPlot")
    )
  )
)

server <- function(input, output, session) {
  # Dynamisk opdater dropdown baseret på liga valg
  output$kampDropdown <- renderUI({
    liga_id <- input$liga
    kamp_valg <- unique(allpasses2122[allpasses2122$competitionId == liga_id, ]$label)
    selectInput("label", "Vælg kamp:", choices = kamp_valg)
    selectizeInput("label", "Vælg kamp:", choices = kamp_valg, options = list(placeholder = 'Vælg eller søg efter en kamp', onInitialize = I('function() { this.setValue(""); }')))
  })
  
  output$passPlot <- renderPlot({
    # Filtrer datasettet for den valgte kamp
    selectedMatch <- subset(allpasses2122, label == input$label)
    
    # Forbered data for plotting
    passes <- transform(selectedMatch, accurate = ifelse(pass.accurate, "Korrekte", "Fejl"))
    passCount <- table(passes$team.name, passes$accurate)
    
    # Generer bar-plot
    ggplot(data = as.data.frame(passCount), aes(Var1, Freq, fill = Var2)) +
      geom_bar(stat = "identity", position = "dodge") +
      theme_minimal() +
      labs(title = paste("Afleveringsanalyse for kamp", input$label),
           x = "Hold",
           y = "Antal afleveringer",
           fill = "Afleveringstype") +
      scale_fill_manual(values = c("Korrekte" = "springgreen4", "Fejl" = "red3"))
  })
}

# Kør applikationen
shinyApp(ui = ui, server = server)





